def soma(float a, float b) {
 float res;
 res = a + b;
 return;
}

def sub(float c, float d) {
 float res;
 res = a - b;
 return;
}

def pow(int e){
 int res;
 res = e*e;
 return;
}

def mult(float x, float y) {
 float res;
 res = x*y;
 return;
}

def div(float l, float m) {
 float rest;
 rest = l/m;
 return;
}

def exp(int f, int g) {
 int res;
 res = f;
 int i;
 for (i = 1; i <= f; i = i + 1) {
    res = mult(res, i);
 }
 return;
}

def log(int base, int logaritimando) {
 int res;
 int j;
 res = 0;
 for (j = logaritimando; j == 1; j = j / base) {
    if (logaritmando % base == 0) {
        res = res + 1;
    }
    else {
        print "Nosso programa não suporta essa combinação.";
        break;
    }
 }
 return; 
}

def triangulo(int base, int ladoE, int ladoD) {
 string word;
 if (base != ladoE) {
    if (base != ladoD) {
        if (ladoE != ladoD) {
            word = "Triângulo escaleno";
            return;
        }
        else {
            word = "Triângulo isósceles";
            return;
        }
    }
 }
 else {
    if (base != ladoD) {
        word = "Triângulo isósceles";
        return;
    }
    else {
        word = "Triângulo equilátero";
        return;
    }
 }
}

def main(){
 print "Vamos realizar alguns testes...";

 int teste;
 int testeNd;
 int testeRd;
 int resp;
 float testeFourth;
 float testeFifth;
 float ans;
 teste = 8;
 testeNd = 2;
 testeRd = 10;
 testeFourth = 5.6;
 testeFifth = 3.2;
 string t;

 ans = soma(testeFourth, testeFifth);
 if (ans != 8.8) {
    print "Houve uma imprecisão de ponto flutuante";
    return;
 }

 ans = sub(testeFourth, testeFifth);
 if (ans != 2.4) {
    print "Houve uma imprecisão de ponto flutuante";
    return;
 }

 ans = mult(testeFourth, testeFifth);
 if (ans != 17.2) {
    print "Houve uma imprecisão de ponto flutuante";
    return;
 }

 ans = div(testeFourth, testeFifth);
 if (ans != 1.75) {
    print "Houve uma imprecisão de ponto flutuante";
    return;
 }

 resp = pow(teste);
 resp = exp(teste, testeNd);
 resp = log(teste, testeNd);

 t = triangulo(teste, testeNd, testeRd);
 print(t);

 return;
}
